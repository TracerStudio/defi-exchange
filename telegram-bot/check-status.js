const TelegramBot = require('node-telegram-bot-api');

// Telegram Bot Token
const BOT_TOKEN = '7769270215:AAH_R-Q14oxkKHU0a53xK4_evXWiQJBiO54';

console.log('üîç CHECKING BOT STATUS...');

// –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π –±–æ—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
const tempBot = new TelegramBot(BOT_TOKEN);

async function checkBotStatus() {
  try {
    console.log('1Ô∏è‚É£ Getting bot info...');
    const botInfo = await tempBot.getMe();
    console.log(`‚úÖ Bot info: @${botInfo.username} (${botInfo.first_name})`);
    
    console.log('2Ô∏è‚É£ Getting webhook info...');
    const webhookInfo = await tempBot.getWebHookInfo();
    console.log('üì° Webhook info:', webhookInfo);
    
    if (webhookInfo.url) {
      console.log('‚ö†Ô∏è WARNING: Webhook is set to:', webhookInfo.url);
      console.log('‚ö†Ô∏è This might cause conflicts with polling!');
    } else {
      console.log('‚úÖ No webhook set - polling should work');
    }
    
    console.log('3Ô∏è‚É£ Testing getUpdates (this will fail if another instance is running)...');
    try {
      const updates = await tempBot.getUpdates({ limit: 1, timeout: 1 });
      console.log('‚úÖ getUpdates works - no conflicts detected');
      console.log('üìä Pending updates:', updates.length);
    } catch (updateError) {
      if (updateError.code === 409) {
        console.log('‚ùå CONFLICT DETECTED: Another bot instance is running!');
        console.log('‚ùå Error:', updateError.message);
      } else {
        console.log('‚ö†Ô∏è getUpdates error:', updateError.message);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Error checking bot status:', error.message);
  }
  
  process.exit(0);
}

checkBotStatus();
